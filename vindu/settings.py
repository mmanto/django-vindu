"""
Django settings for vindu project.

Generated by 'django-admin startproject' using Django 1.11.9.

For more information on this file, see
https://docs.djangoproject.com/en/1.11/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/1.11/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

PROJECT_DIR = os.path.dirname(__file__)


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/1.11/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'c2bcrx)+1g_4b&o-=u5@ce92k#nkhj7%j2-*r^x4j5zhz@a*&9'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['127.0.0.1', 'localhost', 'testserver', 'djangovindu.anting.com.ar']
#APPEND_SLASH=False


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'rest_framework.authtoken',
    'django.contrib.sites',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.facebook',
    'oauth2_provider',
    'social_django',
    'rest_framework_social_oauth2',
    'embed_video',
    'taggit',
    'mercado_vindu',
    'auth_api',
    'carrito',
    'configuraciones',
    'solo',
    'pagos',
    'obligaciones',
    'reportes',
    'nested_admin',
    'tinymce',
]

SITE_ID = 1

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'vindu.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(PROJECT_DIR, 'templates'),],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'social_django.context_processors.backends',
                'social_django.context_processors.login_redirect',
            ],
        },
    },
]

WSGI_APPLICATION = 'vindu.wsgi.application'


# Database
# https://docs.djangoproject.com/en/1.11/ref/settings/#databases

DATABASES = {
    'default' : {
        'ENGINE': 'django.db.backends.postgresql_psycopg2', # Add 'postgresql_psycopg2', 'postgresql', 'mysql', 'sqlite3' or 'oracle'.
        'NAME': 'vindu_postgres',
        'USER': 'postgres', # Not used with sqlite3.
        'PASSWORD': 'postgres', # Not used with sqlite3.
        'HOST': 'localhost', # Set to empty string for localhost. Not used with sqlite3.
        'PORT': '5432', # Set to empty string for default. Not used with sqlite3.
    },
}


AUTH_USER_MODEL = 'auth_api.User'


# Password validation
# https://docs.djangoproject.com/en/1.11/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

AUTHENTICATION_BACKENDS = (
    # Facebook OAuth2
    #'social.backends.facebook.FacebookAppOAuth2',
    #'social.backends.facebook.FacebookOAuth2',

    #'rest_framework_social_oauth2.backends.DjangoOAuth2',
    # Needed to login by username in Django admin, regardless of `allauth`
    'django.contrib.auth.backends.ModelBackend',

    # `allauth` specific authentication methods, such as login by e-mail
    'allauth.account.auth_backends.AuthenticationBackend',
    # social authentications

    # Custom Vindu Token Authentication using "Bearer"
    'auth_api.authentication.BearerTokenAuthentication',

    # Facebook OAuth2
    'social_core.backends.facebook.FacebookAppOAuth2',
    'social_core.backends.facebook.FacebookOAuth2',

    # #Social Auth
    'rest_framework_social_oauth2.backends.DjangoOAuth2',
    'django.contrib.auth.backends.ModelBackend',
)

# Internationalization
# https://docs.djangoproject.com/en/1.11/topics/i18n/

LANGUAGE_CODE = 'es-AR'

TIME_ZONE = 'America/Argentina/Buenos_Aires'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/1.11/howto/static-files/

STATIC_ROOT = os.path.join(BASE_DIR, 'static')
STATIC_URL = '/static/'

STATICFILES_FINDERS = (
    "django.contrib.staticfiles.finders.FileSystemFinder",
    "django.contrib.staticfiles.finders.AppDirectoriesFinder"
)

ROOT_PATH = os.path.dirname(__file__)
STATICFILES_DIRS = [os.path.join(ROOT_PATH, 'static')]

MEDIA_ROOT = os.path.join(ROOT_PATH, 'media')
MEDIA_URL = '/media/'

REST_SESSION_LOGIN = False

EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_USE_TLS = True
EMAIL_HOST = 'smtp.webfaction.com'
EMAIL_HOST_USER = 'vinduapp'
EMAIL_HOST_PASSWORD = 'anting18'
#EMAIL_PORT = 587
DEFAULT_FROM_EMAIL = 'no-reply@vinduapp.com'
#SERVER_EMAIL = 'no-reply@vinduapp.com'

''' EMAIL_HOST = 'localhost'
EMAIL_HOST_USER = 'webmaster@localhost'
DEFAULT_FROM_EMAIL = 'webmaster@localhost' '''



REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': (
        'rest_framework.permissions.IsAuthenticated',
    ),
    'DEFAULT_AUTHENTICATION_CLASSES': (
        #'rest_framework.authentication.BasicAuthentication',
        #'allauth.account.auth_backends.AuthenticationBackend',
        'oauth2_provider.contrib.rest_framework.OAuth2Authentication',
        #'rest_framework.authentication.TokenAuthentication',
        'auth_api.authentication.BearerTokenAuthentication',
        #'rest_framework_social_oauth2.authentication.SocialAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    )
}

# DJANGO-ALLAUTH SETTINGS
#EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'
ACCOUNT_EMAIL_CONFIRMATION_HMAC=False
ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_AUTHENTICATION_METHOD = 'username_email'
ACCOUNT_EMAIL_VERIFICATION = 'none'
ACCOUNT_USERNAME_REQURIED=True

''' SOCIALACCOUNT_PROVIDERS = \
    {'facebook':
       {'METHOD': 'oauth2',
        'SCOPE': ['email','public_profile',],
        'AUTH_PARAMS': {'auth_type': 'reauthenticate'},
        'FIELDS': [
            'id',
            'email',
            'name',
            'first_name',
            'last_name',
            'verified',
            'locale',
            'timezone',
            'link',
            'gender',
            'updated_time'],
        'EXCHANGE_TOKEN': True,
        'LOCALE_FUNC': lambda request: 'kr_KR',
        'VERIFIED_EMAIL': False,
        'VERSION': 'v2.4'}} '''


# Your common stuff: Below this line define 3rd party library settings
# --------------------------------------------------------------------------------
import environ

env = environ.Env()
DOMAIN = env('DOMAIN', default='djangovindu.anting.com.ar')


# Facebook configuration
SOCIAL_AUTH_FACEBOOK_KEY = '147993999237970'
SOCIAL_AUTH_FACEBOOK_SECRET = '741d9e0ae8a55173aca4151325be5d02'

# Define SOCIAL_AUTH_FACEBOOK_SCOPE to get extra permissions from facebook. Email is not sent by default, to get it, you must request the email permission:
SOCIAL_AUTH_FACEBOOK_SCOPE = ['email']
SOCIAL_AUTH_FACEBOOK_PROFILE_EXTRA_PARAMS = {
    'fields': 'id, name, email, gender'
    }
#SOCIAL_AUTH_FACEBOOK_API_VERSION = '2.9'

SOCIAL_AUTH_USER_MODEL = 'auth_api.UserComprador'

SOCIAL_AUTH_PIPELINE = (
    'social_core.pipeline.social_auth.social_details',
    'social_core.pipeline.social_auth.social_uid',
    'social_core.pipeline.social_auth.auth_allowed',
    'social_core.pipeline.social_auth.social_user',
    'social_core.pipeline.social_auth.associate_by_email',  # <--- enable this one
    'social_core.pipeline.user.get_username',
    #'social_core.pipeline.user.create_user',
    'social_core.pipeline.social_auth.associate_user',
    'auth_api.utils.create_user',
    'social_core.pipeline.social_auth.load_extra_data',
    'social_core.pipeline.user.user_details',
)

# PROVEEDORES DE PAGOS
PROVEEDORES_PAGO = (
    ('MP', 'MercadoPago'),
    ('PU', 'PayU'),
)

# DJANGO CARTON
CART_PRODUCT_MODEL = 'mercado_vindu.models.TalleProducto'

SESSION_COOKIE_SECURE = False
SESSION_COOKIE_HTTPONLY = True

try:
    from .local_settings import *
except ImportError:
    pass

# PROTOCOLO PARA MP. En desarrollo protocolo es http. En producción debe ser https
MP_PROTOCOLO = 'http://'

# URL DE PAYU DESARROLLO Y PRODUCCION
URL_PAYU_TEST = True
URL_PAYU_SANDBOX = "https://sandbox.checkout.payulatam.com/ppp-web-gateway-payu/"
URL_PAYU_PRODUCTION = "https://checkout.payulatam.com/ppp-web-gateway-payu/"

# ACCESO A IFLOW
HOST_IFLOW = 'https://test-api.iflow21.com/api/'
USERNAME_IFLOW = 'vinduapp'
PSW_IFLOW = 'VvinduU.2018'


# CONFIGURACIONES VALIDAS PARA IMAGENES Y TAMAÑO MAXIMO PERMITIDO PARA FOTOS
PICTURE_TYPES = ['image/jpg', 'image/jpeg', 'image/png', 'image/gif']
VIDEO_TYPES   = ['video/mp4']
IMAGE_TYPES = PICTURE_TYPES + VIDEO_TYPES
MAX_UPLOAD_PICTURE_SIZE = 512000

OPTIMIZED_SIZE = (1280, 1280)
THUMBNAIL_SIZE = (640, 640)
QUALITY = 80


# BACKENDS PARA DJAGO-EMBED-VIDEO
EMBED_VIDEO_BACKENDS = (
    'embed_video.backends.YoutubeBackend',
    #'embed_video.backends.VimeoBackend',
    #'embed_video.backends.SoundCloudBackend',
    #'my_app.backends.CustomBackend',
)

# DJANGO-TAGGIT SETTINGS
#TAGGIT_CASE_INSENSITIVE = True

'''
LOGGING = {
    'version': 1,
    'filters': {
        'require_debug_true': {
            '()': 'django.utils.log.RequireDebugTrue',
        }
    },
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'filters': ['require_debug_true'],
            'class': 'logging.StreamHandler',
        }
    },
    'loggers': {
        'django.db.backends': {
            'level': 'DEBUG',
            'handlers': ['console'],
        }
    }
}
'''

TINYMCE_DEFAULT_CONFIG = {
    'height': 360,
    'width': 1120,
    'cleanup_on_startup': True,
    'custom_undo_redo_levels': 20,
    'selector': 'textarea',
    'theme': 'modern',
    'plugins': '''
            textcolor save link image media preview codesample contextmenu
            table code lists fullscreen  insertdatetime  nonbreaking
            contextmenu directionality searchreplace wordcount visualblocks
            visualchars code fullscreen autolink lists  charmap print  hr
            anchor pagebreak
            ''',
    'toolbar1': '''
            fullscreen preview bold italic underline | fontselect,
            fontsizeselect  | forecolor backcolor | alignleft alignright |
            aligncenter alignjustify | indent outdent | bullist numlist table |
            | link image media | codesample |
            ''',
    'toolbar2': '''
            visualblocks visualchars |
            charmap hr pagebreak nonbreaking anchor |  code |
            ''',
    'contextmenu': 'formats | link image',
    'menubar': True,
    'statusbar': True,
    }